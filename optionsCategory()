bool ListaDogadjaja::pregledDogadjajaPo(std::string string,std::string uslov)
{
	char temp[10];
	bool krajPrograma = true, krajCiklusa = true;
	std::vector<std::string> nizIzdvojenih;

	do
	{
		system("CLS");
		grb();
		header();
		std::cout << "(Da izaberete opciju utkucajte redni broj zeljene opcije.)" << std::endl;
		std::cout << "(Da zatvorite aplikaciju utkucajte ' kraj '.)" << std::endl;
		std::cout << "(Povratak na prehodnu stranu ' 0 '.)" << std::endl;
		footer();
		header();
		if (uslov == "naziv") 
		{
			std::cout << "FILTRIRANJE DOGADJAJA PO NAZIVU." << std::endl;
			std::cout << string << std::endl;
			ispisiSa(string, uslov,nizIzdvojenih);
		}
		else if (uslov == "datum") 
		{
			std::cout << "FILTRIRANJE DOGADJAJA PO DATUMU U INTERVALU." << std::endl;
			std::cout << string << std::endl;
			ispisiSa(string, uslov,nizIzdvojenih);
		}
		footer();
		

		krajCiklusa = true;
		while (krajCiklusa)
		{
			std::cout << "Unesite redni broj dogadjaja:" << std::endl;
			std::cin >> temp;
			getchar();
			if (temp[0] == '0')
			{
				return true;
			}
			else if (temp[0] == 'k')
			{
				return false;
			}
			else if (atoi(temp)-1 >= 0 && atoi(temp)-1 < (int)nizIzdvojenih.size())
			{
				krajPrograma = prikaziDogadjaj(nizIzdvojenih[atoi(temp) - 1]);
				krajCiklusa = false;
			}
			else
			{
				std::cout << "Ne postoji dogadjaj sa ' " << temp << " ' rednim brojem." << std::endl;
				getchar();
			}
		}

	} while (krajPrograma);
	return false;
}
