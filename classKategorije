class Kategorije
{
	bool izmjena;
	std::vector<std::string> nizKategorija;
public:
	friend std::ostream& operator<<(std::ostream& stream, const Kategorije& other)
	{
		for (int i = 0; i <(int)other.nizKategorija.size(); ++i)
			stream << i+1 << ". " << other.nizKategorija[i] << std::endl;
		return stream;
	}
	Kategorije()
	{
		std::string line;
		std::ifstream myfile("kategorije.txt");
		if (myfile.is_open())
		{
			while (getline(myfile, line))
			{
				nizKategorija.push_back(line);
			}
			myfile.close();
		}
		else std::cout << "Neuspjesno otvaranje datoteke";
		izmjena = false;
	}
	~Kategorije()
	{
		if (izmjena)
		{
			std::ofstream myfile("kategorije.txt");
			if (myfile.is_open())
			{
				for (std::vector<std::string>::iterator it = nizKategorija.begin(); it != nizKategorija.end(); ++it)
					myfile << *it << '\n';
				myfile.close();
			}
			else std::cout << "Neuspjesno otvaranje datoteke";
		}
	}
	std::string getKategorija(int)
	{
		return nizKategorija[i];
	}
	int getBrojKategorija()
	{
		return nizKategorija.size();
	}
	void dodajKategoriju(std::string kategorija)
	{
		izmjena = true;
		nizKategorija.push_back(kategorija);
	}
	void obrisiKategoriju(int)
	{
		izmjena = true;
		nizKategorija.erase(nizKategorija.begin() + i);
	}
};